{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityAction.js","components/Layout/Header.js","components/Project/AddProject.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogAction.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","disptach","wrap","_context","prev","next","axios","post","sent","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","react_router_dom","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","_x2","setJWTToken","token","defaults","headers","common","logout","dispatch","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","isUserAuthenticated","fullName","isUserNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","name","value","onSubmit","preventDefault","newProject","start_date","end_date","console","log","errors","nextProps","placeholder","UpdateProject","updateProject","_nextProps$project","match","params","getProject","classnames","is-invalid","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","onDelete","backlog_id","PT_id","deleteProjectTask","priorityString","priorityClass","_this2","projectSequence","priority","summary","acceptanceCriteria","pt_id","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks","project_task","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","backlog","AddProjectTask","newProjectTask","dueDate","addProjectTask","assertThisInitialized","ref","input","intialState","intitalState","combineReducers","undefined","action","objectSpread","filter","middleWare","thunk","ReactReduxTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProjectTask","create_At","updateProjectTask","_this$props$match$par","getProjectTask","_nextProps$project_ta","patch","Landing","Register","newUser","username","password","confirmPassword","createNewUser","Login","LoginRequest","login","LoginReqeust","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","react_router","assign","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","Layout_Header","exact","path","SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"4UAIaA,SAAgB,SAACC,EAASC,GAAV,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAsB,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE7BC,IAAMC,KAAK,eAAgBf,GAFE,OAAAW,EAAAK,KAI/Cf,EAAQgB,KAAK,cACbR,EAAS,CACPS,KCVoB,aDWpBC,QAAS,KAPoCR,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAU/CF,EAAS,CACPS,KCfoB,aDgBpBC,QAASR,EAAAS,GAAMC,SAASC,OAZqB,yBAAAX,EAAAY,SAAAf,EAAA,iBAAtB,gBAAAgB,GAAA,OAAAtB,EAAAuB,MAAAC,KAAAC,YAAA,KECvBC,6MACJC,cAAgB,SAAAC,GACdC,EAAKC,MAAMC,cAAcH,4EAElB,IACC9B,EAAY0B,KAAKM,MAAjBhC,QACR,OACEkC,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,aACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,gCACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,OACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,SACbF,EAAA5B,EAAA6B,cAAA,QAAMC,UAAU,WAAWpC,EAAQqC,oBAErCH,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,2BACbF,EAAA5B,EAAA6B,cAAA,UAAKnC,EAAQsC,aACbJ,EAAA5B,EAAA6B,cAAA,SAAInC,EAAQuC,cAEdL,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,8BACbF,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,cACZF,EAAA5B,EAAA6B,cAACK,EAAA,EAAD,CAAMC,GAAE,iBAAAC,OAAmB1C,EAAQqC,oBACjCH,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,yBACZF,EAAA5B,EAAA6B,cAAA,KAAGC,UAAU,6BAAb,qBAGJF,EAAA5B,EAAA6B,cAACK,EAAA,EAAD,CAAMC,GAAE,kBAAAC,OAAoB1C,EAAQqC,oBAClCH,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,0BACZF,EAAA5B,EAAA6B,cAAA,KAAGC,UAAU,mBAAb,0BAGJF,EAAA5B,EAAA6B,cAAA,MACEC,UAAU,yBACVO,QAASjB,KAAKG,cAAce,KAC1BlB,KACA1B,EAAQqC,oBAGVH,EAAA5B,EAAA6B,cAAA,KAAGC,UAAU,2BAAb,gCApCQS,aAkDXC,cACb,KACA,CAAEb,cFhByB,SAAAH,GAAE,sBAAAiB,EAAA5C,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAAyC,EAAMvC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,WAE/BqC,OAAOC,QACL,4EAH6B,CAAAF,EAAApC,KAAA,eAAAoC,EAAApC,KAAA,EAMzBC,IAAMsC,OAAN,gBAAAV,OAA6BZ,IANJ,OAQ/BrB,EAAS,CACPS,KC/CwB,iBDgDxBC,QAASW,IAVoB,wBAAAmB,EAAA1B,SAAAyB,MAAJ,gBAAAK,GAAA,OAAAN,EAAAtB,MAAAC,KAAAC,YAAA,KEchBmB,CAGblB,GC9Ca0B,EAVa,WAC1B,OACEpB,EAAA5B,EAAA6B,cAACD,EAAA5B,EAAMiD,SAAP,KACErB,EAAA5B,EAAA6B,cAACK,EAAA,EAAD,CAAMC,GAAG,cAAcL,UAAU,uBAAjC,sBCEAoB,8LAEF9B,KAAKM,MAAMyB,+CAEJ,IACCC,EAAahC,KAAKM,MAAMhC,QAAxB0D,SACR,OACExB,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,YACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,aACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,OACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,aACbF,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,yBAAd,YACAF,EAAA5B,EAAA6B,cAAA,WACAD,EAAA5B,EAAA6B,cAACwB,EAAD,MACAzB,EAAA5B,EAAA6B,cAAA,WACAD,EAAA5B,EAAA6B,cAAA,WACCuB,EAASE,IAAI,SAAA5D,GAAO,OACnBkC,EAAA5B,EAAA6B,cAAC0B,EAAD,CAAaC,IAAK9D,EAAQ8B,GAAI9B,QAASA,iBAjB/B6C,aAkCTC,cAHS,SAAAiB,GAAK,MAAK,CAChC/D,QAAS+D,EAAM/D,UAIf,CAAEyD,YJtBuB,iCAAAO,EAAA7D,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAM,SAAA0D,EAAMxD,GAAN,IAAAyD,EAAA,OAAA7D,EAAAC,EAAAI,KAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,cAAAsD,EAAAtD,KAAA,EACbC,IAAMsD,IAAI,oBADG,OACzBF,EADyBC,EAAAnD,KAE/BP,EAAS,CACPS,KCvBwB,eDwBxBC,QAAS+C,EAAI5C,OAJgB,wBAAA6C,EAAA5C,SAAA0C,MAAN,gBAAAI,GAAA,OAAAL,EAAAvC,MAAAC,KAAAC,YAAA,KIoBZmB,CAGbU,oBClCac,EARK,SAAAC,GACdA,EACFzD,IAAM0D,SAASC,QAAQC,OAAvB,cAAiDH,SAE1CzD,IAAM0D,SAASC,QAAQC,OAAvB,eCyCEC,EAAS,kBAAM,SAAAC,GAC1BC,aAAaC,WAAW,YACxBR,GAAY,GACZM,EAAS,CACP1D,KLxC4B,mBKyC5BC,QAAS,OC9CP4D,mLAKJrD,KAAKM,MAAM2C,SACTzB,OAAO8B,SAASC,KAAM,qCAEf,IAiDPC,EAjDOC,EAEezD,KAAKM,MAAMoD,SAA9BC,EAFIF,EAEJE,WAAWC,EAFPH,EAEOG,KAEZC,EACJrD,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,2BAA2BN,GAAG,cAC3CI,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,sBACZF,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,YACZF,EAAA5B,EAAA6B,cAACK,EAAA,EAAD,CAAMJ,UAAU,WAAWK,GAAG,cAA9B,eAMJP,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,sBACZF,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,YACZF,EAAA5B,EAAA6B,cAACK,EAAA,EAAD,CAAMJ,UAAU,YAAYK,GAAG,cAC7BP,EAAA5B,EAAA6B,cAAA,KAAGC,UAAU,4BAA4BkD,EAAKE,WAGlDtD,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,YACZF,EAAA5B,EAAA6B,cAACK,EAAA,EAAD,CAAMJ,UAAU,WAAWK,GAAG,UAAUE,QAASjB,KAAKiD,OAAO/B,KAAKlB,OAAlE,aAQA+D,EACNvD,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,2BAA2BN,GAAG,cAG3CI,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,sBACZF,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,YACZF,EAAA5B,EAAA6B,cAACK,EAAA,EAAD,CAAMJ,UAAU,YAAYK,GAAG,aAA/B,YAIFP,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,YACZF,EAAA5B,EAAA6B,cAACK,EAAA,EAAD,CAAMJ,UAAU,WAAWK,GAAG,UAA9B,YAiBJ,OALFyC,EADCG,GAAcC,EACDC,EAGAE,EAGVvD,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,uDACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,aACbF,EAAA5B,EAAA6B,cAACK,EAAA,EAAD,CAAMJ,UAAU,eAAeK,GAAG,KAAlC,oCAGAP,EAAA5B,EAAA6B,cAAA,UACEC,UAAU,iBACVlB,KAAK,SACLwE,cAAY,WACZC,cAAY,eAEZzD,EAAA5B,EAAA6B,cAAA,QAAMC,UAAU,yBAEjB8C,WA/EUrC,aA+FNC,cAHO,SAAAiB,GAAK,MAAG,CAC5BqB,SAAUrB,EAAMqB,WAEqB,CAACT,UAAzB7B,CAAkCiC,WC/F3Ca,cACJ,SAAAA,IAAc,IAAA7D,EAAA,OAAA5B,OAAA0F,EAAA,EAAA1F,CAAAuB,KAAAkE,IACZ7D,EAAA5B,OAAA2F,EAAA,EAAA3F,CAAAuB,KAAAvB,OAAA4F,EAAA,EAAA5F,CAAAyF,GAAAI,KAAAtE,QAeFuE,SAAW,SAAAC,GACTnE,EAAKoE,SAALhG,OAAAiG,EAAA,EAAAjG,CAAA,GAAiB+F,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,SAjB9BxE,EAoBdyE,SAAW,SAAAN,GACTA,EAAEO,iBACF,IAAMC,EAAa,CACjBpE,YAAaP,EAAKgC,MAAMzB,YACxBD,kBAAmBN,EAAKgC,MAAM1B,kBAC9BE,YAAaR,EAAKgC,MAAMxB,YACxBoE,WAAY5E,EAAKgC,MAAM4C,WACvBC,SAAU7E,EAAKgC,MAAM6C,UAErBC,QAAQC,IAAIJ,GACd3E,EAAKC,MAAMjC,cAAc2G,EAAY3E,EAAKC,MAAM/B,UA5BhD8B,EAAKgC,MAAQ,CACXzB,YAAa,GACbD,kBAAmB,GACnBE,YAAa,GACboE,WAAY,GACZC,SAAU,GACVG,OAAQ,IAREhF,yFAWYiF,GACpBA,EAAUD,QACZrF,KAAKyE,SAAS,CAAEY,OAAQC,EAAUD,0CAoBpC,OACE7E,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,YACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,aACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,OACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,mBACbF,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,yBAAd,wBACAF,EAAA5B,EAAA6B,cAAA,WACAD,EAAA5B,EAAA6B,cAAA,QAAMqE,SAAU9E,KAAK8E,UACnBtE,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,OACLkB,UAAU,gCACV6E,YAAY,eACZX,KAAK,cACLC,MAAO7E,KAAKqC,MAAMzB,YAClB2D,SAAUvE,KAAKuE,YAGnB/D,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,OACLkB,UAAU,+BACV6E,YAAY,oBACZX,KAAK,oBACLC,MAAO7E,KAAKqC,MAAM1B,kBAClB4D,SAAUvE,KAAKuE,YAInB/D,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,YACEC,UAAU,+BACV6E,YAAY,sBACZX,KAAK,cACLC,MAAO7E,KAAKqC,MAAMxB,YAClB0D,SAAUvE,KAAKuE,YAGnB/D,EAAA5B,EAAA6B,cAAA,wBACAD,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,OACLkB,UAAU,+BACVkE,KAAK,aACLC,MAAO7E,KAAKqC,MAAM4C,WAClBV,SAAUvE,KAAKuE,YAGnB/D,EAAA5B,EAAA6B,cAAA,gCACAD,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,OACLkB,UAAU,+BACVkE,KAAK,WACLC,MAAO7E,KAAKqC,MAAM6C,SAClBX,SAAUvE,KAAKuE,YAInB/D,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,SACLkB,UAAU,+CA/FHS,aAkHVC,cAHS,SAAAiB,GAAK,MAAK,CAChCgD,OAAQhD,EAAMgD,SAId,CAAEhH,iBAFW+C,CAGb8C,mBCrHIsB,cACJ,SAAAA,IAAc,IAAAnF,EAAA,OAAA5B,OAAA0F,EAAA,EAAA1F,CAAAuB,KAAAwF,IACZnF,EAAA5B,OAAA2F,EAAA,EAAA3F,CAAAuB,KAAAvB,OAAA4F,EAAA,EAAA5F,CAAA+G,GAAAlB,KAAAtE,QAwCFuE,SAAW,SAAAC,GACTnE,EAAKoE,SAALhG,OAAAiG,EAAA,EAAAjG,CAAA,GAAiB+F,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,SA1C9BxE,EA4CdyE,SAAW,SAAAN,GACTA,EAAEO,iBACF,IAAMU,EAAgB,CACpBrF,GAAIC,EAAKgC,MAAMjC,GACfQ,YAAaP,EAAKgC,MAAMzB,YACxBD,kBAAmBN,EAAKgC,MAAM1B,kBAC9BE,YAAaR,EAAKgC,MAAMxB,YACxBoE,WAAY5E,EAAKgC,MAAM4C,WACvBC,SAAU7E,EAAKgC,MAAM6C,UAGvB7E,EAAKC,MAAMjC,cAAcoH,EAAepF,EAAKC,MAAM/B,UArDnD8B,EAAKgC,MAAQ,CACXjC,GAAI,GACJQ,YAAa,GACbD,kBAAmB,GACnBE,YAAa,GACboE,WAAY,GACZC,SAAU,GACVG,OAAQ,IATEhF,yFAaYiF,GACpBA,EAAUD,QACZrF,KAAKyE,SAAS,CAAEY,OAAQC,EAAUD,SAFD,IAAAK,EAY/BJ,EAAUhH,QANZ8B,EANiCsF,EAMjCtF,GACAQ,EAPiC8E,EAOjC9E,YACAD,EARiC+E,EAQjC/E,kBACAE,EATiC6E,EASjC7E,YACAoE,EAViCS,EAUjCT,WACAC,EAXiCQ,EAWjCR,SAGFlF,KAAKyE,SAAS,CACZrE,KACAQ,cACAD,oBACAE,cACAoE,aACAC,yDAGgB,IACV9E,EAAOJ,KAAKM,MAAMqF,MAAMC,OAAxBxF,GACRJ,KAAKM,MAAMuF,WAAWzF,EAAIJ,KAAKM,MAAM/B,0CAmB9B,IACC8G,EAAWrF,KAAKqC,MAAhBgD,OACR,OACE7E,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,YACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,aACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,OACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,mBACbF,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,yBAAd,uBACAF,EAAA5B,EAAA6B,cAAA,WACAD,EAAA5B,EAAA6B,cAAA,QAAMqE,SAAU9E,KAAK8E,UACnBtE,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,OACLkB,UAAWoF,IAAW,gCAAiC,CACrDC,aAAcV,EAAOzE,cAEvB2E,YAAY,eACZX,KAAK,cACLC,MAAO7E,KAAKqC,MAAMzB,YAClB2D,SAAUvE,KAAKuE,YAGnB/D,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,OACLkB,UAAWoF,IAAW,+BAAgC,CACpDC,aAAcV,EAAO1E,oBAEvB4E,YAAY,oBACZX,KAAK,oBACLC,MAAO7E,KAAKqC,MAAM1B,kBAClB4D,SAAUvE,KAAKuE,SACfyB,UAAQ,KAGZxF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,YACEC,UAAWoF,IAAW,+BAAgC,CACpDC,aAAcV,EAAOxE,cAEvB0E,YAAY,sBACZX,KAAK,cACLC,MAAO7E,KAAKqC,MAAMxB,YAClB0D,SAAUvE,KAAKuE,YAGnB/D,EAAA5B,EAAA6B,cAAA,wBACAD,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,OACLkB,UAAWoF,IAAW,+BAAgC,CACpDC,aAAcV,EAAOJ,aAEvBL,KAAK,aACLC,MAAO7E,KAAKqC,MAAM4C,WAClBV,SAAUvE,KAAKuE,YAGnB/D,EAAA5B,EAAA6B,cAAA,gCACAD,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,OACLkB,UAAWoF,IAAW,+BAAgC,CACpDC,aAAcV,EAAOH,WAEvBN,KAAK,WACLC,MAAO7E,KAAKqC,MAAM6C,SAClBX,SAAUvE,KAAKuE,YAInB/D,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,SACLkB,UAAU,+CAnIAS,aA0JbC,cALS,SAAAiB,GAAK,MAAK,CAChC/D,QAAS+D,EAAM/D,QAAQA,QACvB+G,OAAQhD,EAAMgD,SAKd,CAAEQ,WTrIsB,SAACzF,EAAI7B,GAAL,sBAAA0H,EAAAxH,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAiB,SAAAqH,EAAMnH,GAAN,IAAAyD,EAAA,OAAA7D,EAAAC,EAAAI,KAAA,SAAAmH,GAAA,cAAAA,EAAAjH,KAAAiH,EAAAhH,MAAA,cAAAgH,EAAAjH,KAAA,EAAAiH,EAAAhH,KAAA,EAErBC,IAAMsD,IAAN,gBAAA1B,OAA0BZ,IAFL,OAEjCoC,EAFiC2D,EAAA7G,KAGvCP,EAAS,CACPS,KC/BqB,cDgCrBC,QAAS+C,EAAI5C,OALwBuG,EAAAhH,KAAA,gBAAAgH,EAAAjH,KAAA,EAAAiH,EAAAzG,GAAAyG,EAAA,SAQvC5H,EAAQgB,KAAK,cAR0B,yBAAA4G,EAAAtG,SAAAqG,EAAA,iBAAjB,gBAAAE,GAAA,OAAAH,EAAAlG,MAAAC,KAAAC,YAAA,ISqIV5B,iBAFD+C,CAGboE,GC9JIa,6MACJC,SAAW,SAACC,EAAYC,GACtBnG,EAAKC,MAAMmG,kBAAkBF,EAAYC,4EAElC,IAEHE,EACAC,EAHGC,EAAA5G,KACCqG,EAAgBrG,KAAKM,MAArB+F,YAkBR,OAdAlB,QAAQC,IAAI,yBACZD,QAAQC,IAAIiB,EAAYQ,iBACK,IAAzBR,EAAYS,WACdH,EAAgB,uBAChBD,EAAiB,QAEU,IAAzBL,EAAYS,WACdH,EAAgB,wBAChBD,EAAiB,UAEU,IAAzBL,EAAYS,WACdH,EAAgB,qBAChBD,EAAiB,OAGjBlG,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,sBACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAS,4BAAAM,OAA8B2F,IAA5C,OACON,EAAYQ,gBADnB,iBACkDH,GAElDlG,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,sBACbF,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,cAAc2F,EAAYU,SACxCvG,EAAA5B,EAAA6B,cAAA,KAAGC,UAAU,4BACV2F,EAAYW,oBAEfxG,EAAA5B,EAAA6B,cAACK,EAAA,EAAD,CACEC,GAAE,sBAAAC,OAAwBqF,EAAY1F,kBAApC,KAAAK,OAAyDqF,EAAYQ,iBACvEnG,UAAU,mBAFZ,iBAOAF,EAAA5B,EAAA6B,cAAA,UACEC,UAAU,sBACVO,QAAS,kBAAI2F,EAAKN,SAChBD,EAAY1F,kBACZ0F,EAAYQ,mBAJhB,mBAxCgB1F,aA2DXC,cACb,KACA,CAAEqF,kBCyB6B,SAACF,EAAYU,GAAb,sBAAAC,EAAAzI,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAuB,SAAAsI,EAAMjE,GAAN,OAAAvE,EAAAC,EAAAI,KAAA,SAAAoI,GAAA,cAAAA,EAAAlI,KAAAkI,EAAAjI,MAAA,WAClDqC,OAAOC,QAAP,gCAAAT,OAA+CiG,IADG,CAAAG,EAAAjI,KAAA,eAAAiI,EAAAjI,KAAA,EAE9CC,IAAMsC,OAAN,gBAAAV,OAA6BuF,EAA7B,KAAAvF,OAA2CiG,IAFG,OAGpD/D,EAAS,CACP1D,KVvF6B,sBUwF7BC,QAASwH,IALyC,wBAAAG,EAAAvH,SAAAsH,MAAvB,gBAAAE,GAAA,OAAAH,EAAAnH,MAAAC,KAAAC,YAAA,KD3BlBmB,CAGbiF,GEJaiB,mLA3DJ,IAEDC,EADoBvH,KAAKM,MAAvBkH,cACoBtF,IAAI,SAAAuF,GAAY,OAC1CjH,EAAA5B,EAAA6B,cAACiH,EAAD,CAAatF,IAAKqF,EAAarH,GAAIiG,YAAaoB,MAG9CE,EAAY,GACZC,EAAkB,GAClBC,EAAY,GAEhB1C,QAAQC,IAAI,SACZD,QAAQC,IAAImC,GACZ,IAAK,IAAIO,EAAI,EAAGA,EAAIP,EAAMQ,OAAQD,IACU,UAAtCP,EAAMO,GAAGxH,MAAM+F,YAAY2B,QAC7BL,EAAUpI,KAAKgI,EAAMO,IAGmB,gBAAtCP,EAAMO,GAAGxH,MAAM+F,YAAY2B,QAC7BJ,EAAgBrI,KAAKgI,EAAMO,IAEa,SAAtCP,EAAMO,GAAGxH,MAAM+F,YAAY2B,QAC7BH,EAAUtI,KAAKgI,EAAMO,IAKzB,OACEtH,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,aACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,OACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,YACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,yBACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,uCACbF,EAAA5B,EAAA6B,cAAA,qBAGHkH,GAEHnH,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,YACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,yBACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,qCACbF,EAAA5B,EAAA6B,cAAA,2BAGHmH,GAEHpH,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,YACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,yBACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,qCACbF,EAAA5B,EAAA6B,cAAA,oBAGHoH,YApDS1G,aCIhB8G,cACJ,SAAAA,IAAc,IAAA5H,EAAA,OAAA5B,OAAA0F,EAAA,EAAA1F,CAAAuB,KAAAiI,IACZ5H,EAAA5B,OAAA2F,EAAA,EAAA3F,CAAAuB,KAAAvB,OAAA4F,EAAA,EAAA5F,CAAAwJ,GAAA3D,KAAAtE,QACKqC,MAAQ,CACXgD,OAAQ,IAHEhF,mFAMM,IACVD,EAAOJ,KAAKM,MAAMqF,MAAMC,OAAxBxF,GACRJ,KAAKM,MAAM4H,WAAW9H,qDAEEkF,GACpBA,EAAUD,QACZrF,KAAKyE,SAAS,CAAEY,OAAQC,EAAUD,0CAG7B,IAIH8C,EAHI9C,EAAWrF,KAAKqC,MAAhBgD,OACAjF,EAAOJ,KAAKM,MAAMqF,MAAMC,OAAxBxF,GA6BR,OADA+H,EAzBuB,SAAC9C,EAAQmC,GAC9B,OAAIA,EAAcO,OAAS,EACrB1C,EAAO+C,gBAEP5H,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,iCAAiC2H,KAAK,SAClDhD,EAAO+C,iBAGH/C,EAAO1E,kBAEdH,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,iCAAiC2H,KAAK,SAClDhD,EAAO1E,mBAKVH,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,+BAA+B2H,KAAK,SAAnD,kCAMG7H,EAAA5B,EAAA6B,cAAC6H,EAAD,CAASd,cAAeA,IAGpBe,CAAelD,EA3BJrF,KAAKM,MAAMkI,QAA7BhB,eA6BNhH,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,aACbF,EAAA5B,EAAA6B,cAACK,EAAA,EAAD,CAAMC,GAAE,mBAAAC,OAAqBZ,GAAMM,UAAU,wBAC3CF,EAAA5B,EAAA6B,cAAA,KAAGC,UAAU,sBAAb,yBAEFF,EAAA5B,EAAA6B,cAAA,WACAD,EAAA5B,EAAA6B,cAAA,WACC0H,UAtDkBhH,aAuEZC,cALS,SAAAiB,GAAK,MAAK,CAChCmG,QAASnG,EAAMmG,QACfnD,OAAQhD,EAAMgD,SAKd,CAAE6C,WFjDsB,SAAA3B,GAAU,sBAAAjE,EAAA7D,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAA0D,EAAMW,GAAN,IAAAV,EAAA,OAAA7D,EAAAC,EAAAI,KAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,cAAAsD,EAAAvD,KAAA,EAAAuD,EAAAtD,KAAA,EAQlBC,IAAMsD,IAAN,gBAAA1B,OAA0BuF,IARR,OAQ9B/D,EAR8BC,EAAAnD,KASpC4D,EAAS,CACP1D,KVnCqB,cUoCrBC,QAAS+C,EAAI5C,OAXqB6C,EAAAtD,KAAA,gBAAAsD,EAAAvD,KAAA,EAAAuD,EAAA/C,GAAA+C,EAAA,SAcpCS,EAAS,CACP1D,KV9CoB,aU+CpBC,QAASgD,EAAA/C,GAAMC,SAASC,OAhBU,yBAAA6C,EAAA5C,SAAA0C,EAAA,iBAAJ,gBAAAI,GAAA,OAAAL,EAAAvC,MAAAC,KAAAC,YAAA,KE+CrBmB,CAGb6G,WC1EIQ,cACJ,SAAAA,EAAYnI,GAAO,IAAAD,EAAA5B,OAAA0F,EAAA,EAAA1F,CAAAuB,KAAAyI,IACjBpI,EAAA5B,OAAA2F,EAAA,EAAA3F,CAAAuB,KAAAvB,OAAA4F,EAAA,EAAA5F,CAAAgK,GAAAnE,KAAAtE,KAAMM,KAwBRwE,SAAW,SAAAN,GACTA,EAAEO,iBAEF,IAAM2D,EAAiB,CACrB3B,QAAS1G,EAAKgC,MAAM0E,QACpBC,mBAAoB3G,EAAKgC,MAAM2E,mBAC/BgB,OAAQ3H,EAAKgC,MAAM2F,OACnBlB,SAAUzG,EAAKgC,MAAMyE,SACrB6B,QAAStI,EAAKgC,MAAMsG,SAGtBtI,EAAKC,MAAMsI,eACTvI,EAAKgC,MAAM1B,kBACX+H,EACArI,EAAKC,MAAM/B,UAvCI,IAET6B,EAAOC,EAAKC,MAAMqF,MAAMC,OAAxBxF,GAFS,OAGjBC,EAAKgC,MAAQ,CACX0E,QAAS,GACTC,mBAAoB,GACpBgB,OAAQ,GACRlB,SAAU,EACV6B,QAAS,GACThI,kBAAmBP,EACnBiF,OAAQ,IAGVhF,EAAKkE,SAAWlE,EAAKkE,SAASrD,KAAdzC,OAAAoK,EAAA,EAAApK,CAAA4B,IAbCA,yFAgBOiF,GACpBA,EAAUD,QACZrF,KAAKyE,SAAS,CAAEY,OAAQC,EAAUD,0CAG7Bb,GACPxE,KAAKyE,SAALhG,OAAAiG,EAAA,EAAAjG,CAAA,GAAiB+F,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,yCAoBnC,IACCzE,EAAOJ,KAAKM,MAAMqF,MAAMC,OAAxBxF,GACAiF,EAAWrF,KAAKqC,MAAhBgD,OACR,OACE7E,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,WACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,aACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,OACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,mBACbF,EAAA5B,EAAA6B,cAACK,EAAA,EAAD,CAAMC,GAAE,iBAAAC,OAAmBZ,GAAMM,UAAU,iBAA3C,yBAGAF,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,yBAAd,oBACAF,EAAA5B,EAAA6B,cAAA,KAAGC,UAAU,oBAAb,+BACAF,EAAA5B,EAAA6B,cAAA,QAAMqE,SAAU9E,KAAK8E,UACnBtE,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,OACLkB,UAAWoF,IAAW,+BAAgC,CACpDC,aAAcV,EAAO0B,UAEvBnC,KAAK,UACLW,YAAY,uBACZV,MAAO7E,KAAKqC,MAAM0E,QAClBxC,SAAUvE,KAAKuE,WAEhBc,EAAO0B,SACNvG,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,oBAAoB2E,EAAO0B,UAG9CvG,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,YACEjB,KAAK,OACLkB,UAAU,+BACVkE,KAAK,qBACLW,YAAY,sBACZuD,IAAK9I,KAAK+I,MACVlE,MAAO7E,KAAKqC,MAAM2E,mBAClBzC,SAAUvE,KAAKuE,YAInB/D,EAAA5B,EAAA6B,cAAA,sBACAD,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,OACLkB,UAAU,+BACVkE,KAAK,UACLC,MAAO7E,KAAKqC,MAAMsG,QAClBpE,SAAUvE,KAAKuE,YAGnB/D,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,UACEC,UAAU,+BACVkE,KAAK,WACLC,MAAO7E,KAAKqC,MAAMyE,SAClBvC,SAAUvE,KAAKuE,UAEf/D,EAAA5B,EAAA6B,cAAA,UAAQoE,MAAO,GAAf,mBACArE,EAAA5B,EAAA6B,cAAA,UAAQoE,MAAO,GAAf,QACArE,EAAA5B,EAAA6B,cAAA,UAAQoE,MAAO,GAAf,UACArE,EAAA5B,EAAA6B,cAAA,UAAQoE,MAAO,GAAf,SAIJrE,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,UACEC,UAAU,+BACVkE,KAAK,SACLC,MAAO7E,KAAKqC,MAAM2F,OAClBzD,SAAUvE,KAAKuE,UAEf/D,EAAA5B,EAAA6B,cAAA,UAAQoE,MAAM,IAAd,iBACArE,EAAA5B,EAAA6B,cAAA,UAAQoE,MAAM,SAAd,SACArE,EAAA5B,EAAA6B,cAAA,UAAQoE,MAAM,eAAd,eACArE,EAAA5B,EAAA6B,cAAA,UAAQoE,MAAM,QAAd,UAIJrE,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,SACLkB,UAAU,+CA5HCS,aA+IdC,cAHS,SAAAiB,GAAK,MAAK,CAChCgD,OAAQhD,EAAMgD,SAId,CAAEuD,eH/I0B,SAC5BrC,EACAkB,EACAlJ,GAH4B,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAIzB,SAAAC,EAAMoE,GAAN,OAAAvE,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAEDiG,QAAQC,IAAI,iBACZD,QAAQC,IAAIqC,GAHXxI,EAAAE,KAAA,EAIKC,IAAMC,KAAN,gBAAA2B,OAA2BuF,GAAckB,GAJ9C,OAKDlJ,EAAQgB,KAAR,iBAAAyB,OAA8BuF,IAC9BrD,EAAS,CACP1D,KVpBoB,aUqBpBC,QAAS,KARVR,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAWDiE,EAAS,CACP1D,KVzBoB,aU0BpBC,QAASR,EAAAS,GAAMC,SAASC,OAbzB,yBAAAX,EAAAY,SAAAf,EAAA,iBAJyB,gBAAAgB,GAAA,OAAAtB,EAAAuB,MAAAC,KAAAC,YAAA,KG6IfmB,CAGbqH,6BCtJIO,UAAc,YCDdA,EAAc,CAClBhH,SAAU,GACV1D,QAAS,ICFL2K,EAAa,CACfzB,cAAc,GACdC,aAAa,ICFXuB,EAAc,CACZpF,KAAK,GACLD,YAAW,GCCJuF,eAAgB,CAC7B7D,OJDa,WAAsC,IAA7BhD,EAA6BpC,UAAA8H,OAAA,QAAAoB,IAAAlJ,UAAA,GAAAA,UAAA,GAArB+I,EAAaI,EAAQnJ,UAAA8H,OAAA,EAAA9H,UAAA,QAAAkJ,EACnD,OAAQC,EAAO5J,MACb,IdPsB,acQpB,OAAO4J,EAAO3J,QAEhB,QACE,OAAO4C,IIJX/D,QHAa,WAAsC,IAA7B+D,EAA6BpC,UAAA8H,OAAA,QAAAoB,IAAAlJ,UAAA,GAAAA,UAAA,GAArB+I,EAAaI,EAAQnJ,UAAA8H,OAAA,EAAA9H,UAAA,QAAAkJ,EACnD,OAAQC,EAAO5J,MACb,IfRwB,eeStB,OAAOf,OAAA4K,EAAA,EAAA5K,CAAA,GACF4D,EADL,CAEEL,SAAUoH,EAAO3J,UAErB,IfZuB,cearB,OAAOhB,OAAA4K,EAAA,EAAA5K,CAAA,GACF4D,EADL,CAEE/D,QAAS8K,EAAO3J,UAEpB,IfhB0B,iBeiBxB,OAAOhB,OAAA4K,EAAA,EAAA5K,CAAA,GACF4D,EADL,CAEEL,SAAUK,EAAML,SAASsH,OACvB,SAAAhL,GAAO,OAAIA,EAAQqC,oBAAsByI,EAAO3J,YAGtD,QACE,OAAO4C,IGnBXmG,QFDa,WAAmC,IAA1BnG,EAA0BpC,UAAA8H,OAAA,QAAAoB,IAAAlJ,UAAA,GAAAA,UAAA,GAApBgJ,EAAaG,EAAOnJ,UAAA8H,OAAA,EAAA9H,UAAA,QAAAkJ,EAElD,OAAOC,EAAO5J,MAEV,IhBLuB,cgBMvB,OAAAf,OAAA4K,EAAA,EAAA5K,CAAA,GACO4D,EADP,CAEImF,cAAgB4B,EAAO3J,UAG3B,IhBV4B,mBgBW5B,OAAAhB,OAAA4K,EAAA,EAAA5K,CAAA,GACO4D,EADP,CAEIoF,aAAe2B,EAAO3J,UAI1B,IhBhB+B,sBgBiB/B,OAAAhB,OAAA4K,EAAA,EAAA5K,CAAA,GACO4D,EADP,CAEQmF,cAAenF,EAAMmF,cAAc8B,OAAO,SAAA7B,GAAY,OAAGA,EAAaZ,kBAAkBuC,EAAO3J,YAIvG,QAAS,OAAO4C,IEtBlBqB,SDQe,WAAkC,IATpBjE,EASL4C,EAAyBpC,UAAA8H,OAAA,QAAAoB,IAAAlJ,UAAA,GAAAA,UAAA,GAAnB+I,EAAYI,EAAOnJ,UAAA8H,OAAA,EAAA9H,UAAA,QAAAkJ,EAE/C,OAAOC,EAAO5J,MACV,IjBTwB,mBiBUxB,OAAAf,OAAA4K,EAAA,EAAA5K,CAAA,GACO4D,EADP,CAEIsB,YAfmBlE,EAea2J,EAAO3J,UAdpCA,GAeHmE,KAAKwF,EAAO3J,UAGhB,QAAQ,OAAO4C,MEvBjB2G,GAAc,GAEdO,GAAa,CAACC,KAIdC,GACJjI,OAAOkI,8BAAgClI,OAAOkI,+BAoBjCC,GAjBXnI,OAAOoI,UAAUC,UAAUC,SAAS,WAAWL,GACzCM,YACNC,GACAhB,GACAiB,YACEC,IAAenK,WAAf,EAAmBwJ,IACnBE,KAIIM,YACNC,GACAhB,GACAiB,YAAQC,IAAenK,WAAf,EAAmBwJ,MClBzBY,eACJ,SAAAA,IAAc,IAAA9J,EAAA,OAAA5B,OAAA0F,EAAA,EAAA1F,CAAAuB,KAAAmK,IACZ9J,EAAA5B,OAAA2F,EAAA,EAAA3F,CAAAuB,KAAAvB,OAAA4F,EAAA,EAAA5F,CAAA0L,GAAA7F,KAAAtE,QAwDFuE,SAAW,SAAAC,GACTnE,EAAKoE,SAALhG,OAAAiG,EAAA,EAAAjG,CAAA,GAAiB+F,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,SA1D9BxE,EA6DdyE,SAAW,SAAAN,GACTA,EAAEO,iBACF,IAAM2D,EAAiB,CACrBtI,GAAIC,EAAKgC,MAAMjC,GACf2G,QAAS1G,EAAKgC,MAAM0E,QACpBC,mBAAoB3G,EAAKgC,MAAM2E,mBAC/BgB,OAAQ3H,EAAKgC,MAAM2F,OACnBlB,SAAUzG,EAAKgC,MAAMyE,SACrB6B,QAAStI,EAAKgC,MAAMsG,QACpBhI,kBAAmBN,EAAKgC,MAAM1B,kBAC9BkG,gBAAiBxG,EAAKgC,MAAMwE,gBAC5BuD,UAAW/J,EAAKgC,MAAM+H,WAExBjF,QAAQC,IAAIsD,GAEZrI,EAAKC,MAAM+J,kBACThK,EAAKgC,MAAM1B,kBACXN,EAAKgC,MAAMwE,gBACX6B,EACArI,EAAKC,MAAM/B,UA9Eb8B,EAAKgC,MAAQ,CACXjC,GAAI,GACJyG,gBAAiB,GACjBE,QAAS,GACTC,mBAAoB,GACpBgB,OAAQ,GACRlB,SAAU,GACV6B,QAAS,GACThI,kBAAmB,GACnByJ,UAAW,GACX/E,OAAQ,IAZEhF,mFAeM,IAAAiK,EACYtK,KAAKM,MAAMqF,MAAMC,OAAvCW,EADU+D,EACV/D,WAAYU,EADFqD,EACErD,MACpB9B,QAAQC,IAAI,qBAGZD,QAAQC,IAAIpF,KAAKM,MAAMqF,MAAMC,OAAOW,YACpCpB,QAAQC,IAAIpF,KAAKM,MAAMqF,MAAMC,OAAOqB,OACpCjH,KAAKM,MAAMiK,eAAehE,EAAYU,EAAOjH,KAAKM,MAAM/B,2DAGhC+G,GACxBH,QAAQC,IAAI,6BACZD,QAAQC,IAAIE,GAERA,EAAUD,QACZrF,KAAKyE,SAAS,CAAEY,OAAQC,EAAUD,SALD,IAAAmF,EAiB/BlF,EAAUmC,aATZrH,EARiCoK,EAQjCpK,GACAyG,EATiC2D,EASjC3D,gBACAE,EAViCyD,EAUjCzD,QACAC,EAXiCwD,EAWjCxD,mBACAgB,EAZiCwC,EAYjCxC,OACAlB,EAbiC0D,EAajC1D,SACA6B,EAdiC6B,EAcjC7B,QACAhI,EAfiC6J,EAejC7J,kBACAyJ,EAhBiCI,EAgBjCJ,UAGFpK,KAAKyE,SAAS,CACZrE,KACAyG,kBACAE,UACAC,qBACAgB,SACAlB,WACA6B,UACAhI,oBACAyJ,+CA8BK,IACC/E,EAAWrF,KAAKqC,MAAhBgD,OACR,OACE7E,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,WACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,aACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,OACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,mBACbF,EAAA5B,EAAA6B,cAACK,EAAA,EAAD,CACEC,GAAE,iBAAAC,OAAmBhB,KAAKqC,MAAM1B,mBAChCD,UAAU,iBAFZ,yBAMAF,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,yBAAd,4BAGAF,EAAA5B,EAAA6B,cAAA,KAAGC,UAAU,oBAAb,gBACgBV,KAAKqC,MAAM1B,kBAD3B,sBAEG,GAFH,KAESX,KAAKqC,MAAMwE,iBAEpBrG,EAAA5B,EAAA6B,cAAA,QAAMqE,SAAU9E,KAAK8E,UACnBtE,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,OACLkB,UAAWoF,IAAW,+BAAgC,CACpDC,aAAcV,EAAO0B,UAEvBnC,KAAK,UACLW,YAAY,uBACZV,MAAO7E,KAAKqC,MAAM0E,QAClBxC,SAAUvE,KAAKuE,WAEhBc,EAAO0B,SACNvG,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,oBAAoB2E,EAAO0B,UAG9CvG,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,YACEC,UAAU,+BACV6E,YAAY,sBACZX,KAAK,qBACLC,MAAO7E,KAAKqC,MAAM2E,mBAClBzC,SAAUvE,KAAKuE,YAGnB/D,EAAA5B,EAAA6B,cAAA,sBACAD,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,OACLkB,UAAU,+BACVkE,KAAK,UACLC,MAAO7E,KAAKqC,MAAMsG,QAClBpE,SAAUvE,KAAKuE,YAGnB/D,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,UACEC,UAAU,+BACVkE,KAAK,WACLC,MAAO7E,KAAKqC,MAAMyE,SAClBvC,SAAUvE,KAAKuE,UAEf/D,EAAA5B,EAAA6B,cAAA,UAAQoE,MAAO,GAAf,mBACArE,EAAA5B,EAAA6B,cAAA,UAAQoE,MAAO,GAAf,QACArE,EAAA5B,EAAA6B,cAAA,UAAQoE,MAAO,GAAf,UACArE,EAAA5B,EAAA6B,cAAA,UAAQoE,MAAO,GAAf,SAIJrE,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,UACEC,UAAU,+BACVkE,KAAK,UAELpE,EAAA5B,EAAA6B,cAAA,UAAQoE,MAAM,IAAd,iBACArE,EAAA5B,EAAA6B,cAAA,UAAQoE,MAAM,SAAd,SACArE,EAAA5B,EAAA6B,cAAA,UAAQoE,MAAM,eAAd,eACArE,EAAA5B,EAAA6B,cAAA,UAAQoE,MAAM,QAAd,UAIJrE,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,SACLkB,UAAU,+CAvKIS,aA8LjBC,eALS,SAAAiB,GAAK,MAAK,CAChCoF,aAAcpF,EAAMmG,QAAQf,aAC5BpC,OAAQhD,EAAMgD,SAKd,CAAEkF,eVrJ0B,SAC5BhE,EACAU,EACA1I,GAH4B,sBAAA0H,EAAAxH,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAIzB,SAAAqH,EAAMhD,GAAN,IAAAV,EAAA,OAAA7D,EAAAC,EAAAI,KAAA,SAAAmH,GAAA,cAAAA,EAAAjH,KAAAiH,EAAAhH,MAAA,cAAAgH,EAAAjH,KAAA,EAAAiH,EAAAhH,KAAA,EAEiBC,IAAMsD,IAAN,gBAAA1B,OAA0BuF,EAA1B,KAAAvF,OAAwCiG,IAFzD,OAEKzE,EAFL2D,EAAA7G,KAID4D,EAAS,CACP1D,KVtD0B,mBUuD1BC,QAAS+C,EAAI5C,OANduG,EAAAhH,KAAA,gBAAAgH,EAAAjH,KAAA,EAAAiH,EAAAzG,GAAAyG,EAAA,SASD5H,EAAQgB,KAAK,cATZ,yBAAA4G,EAAAtG,SAAAqG,EAAA,iBAJyB,gBAAAE,GAAA,OAAAH,EAAAlG,MAAAC,KAAAC,YAAA,IUqJVoK,kBVpIa,SAC/B9D,EACAU,EACAQ,EACAlJ,GAJ+B,sBAAA8C,EAAA5C,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAK5B,SAAAyC,EAAM4B,GAAN,OAAAvE,EAAAC,EAAAI,KAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,cAAAoC,EAAArC,KAAA,EAAAqC,EAAApC,KAAA,EAEKC,IAAMqL,MAAN,gBAAAzJ,OAA4BuF,EAA5B,KAAAvF,OAA0CiG,GAASQ,GAFxD,OAGDlJ,EAAQgB,KAAR,iBAAAyB,OAA8BuF,IAE9BrD,EAAS,CACP1D,KVhFoB,aUiFpBC,QAAS,KAPV8B,EAAApC,KAAA,gBAAAoC,EAAArC,KAAA,EAAAqC,EAAA7B,GAAA6B,EAAA,SAUD2B,EAAS,CACP1D,KVrFoB,aUsFpBC,QAAS8B,EAAA7B,GAAMC,SAASC,OAZzB,yBAAA2B,EAAA1B,SAAAyB,EAAA,iBAL4B,gBAAAK,GAAA,OAAAN,EAAAtB,MAAAC,KAAAC,YAAA,KUkIlBmB,CAGb+I,ICrMIO,+LAIC1K,KAAKM,MAAMoD,SAASC,YACrB3D,KAAKM,MAAM/B,QAAQgB,KAAK,+CAI1B,OACEiB,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,WACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,yCACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,aACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,OACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,yBACbF,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,kBAAd,oCAGAF,EAAA5B,EAAA6B,cAAA,KAAGC,UAAU,QAAb,gEAGAF,EAAA5B,EAAA6B,cAAA,WACAD,EAAA5B,EAAA6B,cAACK,EAAA,EAAD,CAAMJ,UAAU,8BAA8BK,GAAG,aAAjD,WAGAP,EAAA5B,EAAA6B,cAACK,EAAA,EAAD,CAAMJ,UAAU,gCAAgCK,GAAG,UAAnD,qBAzBMI,aA4CPC,eAHO,SAAAiB,GAAK,MAAG,CAC5BqB,SAASrB,EAAMqB,WAEsB,KAAxBtC,CAA8BsJ,IC5CvCC,eACJ,SAAAA,IAAc,IAAAtK,EAAA,OAAA5B,OAAA0F,EAAA,EAAA1F,CAAAuB,KAAA2K,IACZtK,EAAA5B,OAAA2F,EAAA,EAAA3F,CAAAuB,KAAAvB,OAAA4F,EAAA,EAAA5F,CAAAkM,GAAArG,KAAAtE,QAqBFuE,SAAW,SAAAC,GACTnE,EAAKoE,SAALhG,OAAAiG,EAAA,EAAAjG,CAAA,GAAiB+F,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,SAvB9BxE,EA0BdyE,SAAW,SAAAN,GACTA,EAAEO,iBAEF,IAAM6F,EAAU,CACdC,SAAUxK,EAAKgC,MAAMwI,SACrBC,SAAUzK,EAAKgC,MAAMyI,SACrBhH,SAAUzD,EAAKgC,MAAMyB,SACrBiH,gBAAiB1K,EAAKgC,MAAM0I,iBAE9B5F,QAAQC,IAAIwF,GACZvK,EAAKC,MAAM0K,cAAcJ,EAASvK,EAAKC,MAAM/B,UAjC7C8B,EAAKgC,MAAQ,CACXwI,SAAU,GACV/G,SAAU,GACVgH,SAAU,GACVC,gBAAiB,GACjB1F,OAAQ,IAREhF,mFAaTL,KAAKM,MAAMoD,SAASC,YACrB3D,KAAKM,MAAM/B,QAAQgB,KAAK,gEAGF+F,GACpBA,EAAUD,QACZrF,KAAKyE,SAAS,CAAEY,OAAQC,EAAUD,0CAoB7B,IACCA,EAAWrF,KAAKqC,MAAhBgD,OACR,OACE7E,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,YACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,aACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,OACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,mBACbF,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,yBAAd,WACAF,EAAA5B,EAAA6B,cAAA,KAAGC,UAAU,oBAAb,uBACAF,EAAA5B,EAAA6B,cAAA,QAAMqE,SAAU9E,KAAK8E,UACnBtE,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,OACLkB,UAAWoF,IAAW,+BAAgC,CACpDC,aAAcV,EAAOvB,WAEvByB,YAAY,YACZX,KAAK,WACLC,MAAO7E,KAAKqC,MAAMyB,SAClBS,SAAUvE,KAAKuE,WAEhBc,EAAOvB,UACNtD,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,oBAAoB2E,EAAOvB,WAG9CtD,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,QACLkB,UAAWoF,IAAW,+BAAgC,CACpDC,aAAcV,EAAOwF,WAEvBtF,YAAY,gBACZX,KAAK,WACLC,MAAO7E,KAAKqC,MAAMwI,SAClBtG,SAAUvE,KAAKuE,WAEhBc,EAAOwF,UACNrK,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,oBAAoB2E,EAAOwF,WAG9CrK,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,WACLkB,UAAWoF,IAAW,+BAAgC,CACpDC,aAAcV,EAAOyF,WAEvBvF,YAAY,WACZX,KAAK,WACLC,MAAO7E,KAAKqC,MAAMyI,SAClBvG,SAAUvE,KAAKuE,WAEhBc,EAAOyF,UACNtK,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,oBAAoB2E,EAAOyF,WAG9CtK,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,WACLkB,UAAWoF,IAAW,+BAAgC,CACpDC,aAAcV,EAAO0F,kBAEvBxF,YAAY,mBACZX,KAAK,kBACLC,MAAO7E,KAAKqC,MAAM0I,gBAClBxG,SAAUvE,KAAKuE,WAEhBc,EAAO0F,iBACNvK,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,oBACZ2E,EAAO0F,kBAIdvK,EAAA5B,EAAA6B,cAAA,SAAOjB,KAAK,SAASkB,UAAU,4CAhHxBS,aAqIRC,eALS,SAAAiB,GAAK,MAAK,CAChCgD,OAAQhD,EAAMgD,OACd3B,SAASrB,EAAMqB,WAKf,CAAEsH,cjBtIyB,SAACJ,EAASrM,GAAV,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAsB,SAAAC,EAAMoE,GAAN,OAAAvE,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAE/CiG,QAAQC,IAAIwF,GAFmC3L,EAAAE,KAAA,EAGzCC,IAAMC,KAAK,sBAAuBuL,GAHO,OAI/CrM,EAAQgB,KAAK,UAEb2D,EAAS,CACP1D,KLboB,aKcpBC,QAAS,KARoCR,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAW/CiE,EAAS,CACP1D,KLlBoB,aKmBpBC,QAASR,EAAAS,GAAMC,SAASC,OAbqB,yBAAAX,EAAAY,SAAAf,EAAA,iBAAtB,gBAAAgB,GAAA,OAAAtB,EAAAuB,MAAAC,KAAAC,YAAA,KiBoIdmB,CAGbuJ,ICvIIM,eACJ,SAAAA,IAAc,IAAA5K,EAAA,OAAA5B,OAAA0F,EAAA,EAAA1F,CAAAuB,KAAAiL,IACZ5K,EAAA5B,OAAA2F,EAAA,EAAA3F,CAAAuB,KAAAvB,OAAA4F,EAAA,EAAA5F,CAAAwM,GAAA3G,KAAAtE,QAsBFuE,SAAW,SAAAC,GACTnE,EAAKoE,SAALhG,OAAAiG,EAAA,EAAAjG,CAAA,GAAiB+F,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,SAxB9BxE,EA2BdyE,SAAW,SAAAN,GACTA,EAAEO,iBAEF,IAAMmG,EAAe,CACnBL,SAAUxK,EAAKgC,MAAMwI,SACrBC,SAAUzK,EAAKgC,MAAMyI,UAGvBzK,EAAKC,MAAM6K,MAAMD,IAjCjB7K,EAAKgC,MAAQ,CACXwI,SAAU,GACVC,SAAU,GACVzF,OAAQ,IALEhF,mFAUTL,KAAKM,MAAMoD,SAASC,YACrB3D,KAAKM,MAAM/B,QAAQgB,KAAK,gEAGF+F,GACpBA,EAAU5B,SAASC,YACrB3D,KAAKM,MAAM/B,QAAQgB,KAAK,cAGtB+F,EAAUD,QACZrF,KAAKyE,SAAS,CAAEY,OAAQC,EAAUD,0CAkB7B,IACCA,EAAWrF,KAAKqC,MAAhBgD,OACR,OACE7E,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,SACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,aACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,OACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,mBACbF,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,yBAAd,UACAF,EAAA5B,EAAA6B,cAAA,QAAMqE,SAAU9E,KAAK8E,UACnBtE,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,OACLkB,UAAWoF,IAAW,+BAAgC,CACpDC,aAAcV,EAAOwF,WAEvBtF,YAAY,gBACZX,KAAK,WACLC,MAAO7E,KAAKqC,MAAMwI,SAClBtG,SAAUvE,KAAKuE,WAEhBc,EAAOwF,UACNrK,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,oBAAf,oBAGJF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,WACLkB,UAAWoF,IAAW,+BAAgC,CACpDC,aAAcV,EAAOyF,WAEvBvF,YAAY,WACZX,KAAK,WACLC,MAAO7E,KAAKqC,MAAMyI,SAClBvG,SAAUvE,KAAKuE,WAEhBc,EAAOyF,UACNtK,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,oBAAf,oBAGJF,EAAA5B,EAAA6B,cAAA,SAAOjB,KAAK,SAASkB,UAAU,4CA9E3BS,aAkGLC,eAJS,SAAAiB,GAAK,MAAK,CAChCqB,SAAUrB,EAAMqB,SAChB2B,OAAQhD,EAAMgD,SAId,CAAE8F,MlBlFiB,SAAAC,GAAY,sBAAA9I,EAAA7D,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAA0D,EAAMW,GAAN,IAAAV,EAAAK,EAAAwI,EAAA,OAAA1M,EAAAC,EAAAI,KAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,cAAAsD,EAAAvD,KAAA,EAAAuD,EAAAtD,KAAA,EAEfC,IAAMC,KAAK,mBAAoB+L,GAFhB,OAE3B5I,EAF2BC,EAAAnD,KAGzBuD,EAAUL,EAAI5C,KAAdiD,MAERM,aAAamI,QAAQ,WAAYzI,GAEjCD,EAAYC,GAENwI,EAAUE,IAAW1I,GAE3BK,EAAS,CACP1D,KLzB0B,mBK0B1BC,QAAS4L,IAbsB5I,EAAAtD,KAAA,iBAAAsD,EAAAvD,KAAA,GAAAuD,EAAA/C,GAAA+C,EAAA,SAgBjCS,EAAS,CACP1D,KLzCoB,aK0CpBC,QAASgD,EAAA/C,GAAMC,SAASC,OAlBO,yBAAA6C,EAAA5C,SAAA0C,EAAA,kBAAJ,gBAAAI,GAAA,OAAAL,EAAAvC,MAAAC,KAAAC,YAAA,KkBgFlBmB,CAGb6J,cCjFa7J,eAJS,SAAAiB,GAAK,MAAK,CAChCqB,SAAUrB,EAAMqB,WAGHtC,CArBM,SAAA5C,GAAA,IAAc2C,EAAd3C,EAAGgN,UAAsB9H,EAAzBlF,EAAyBkF,SAAa+H,EAAtChN,OAAAiN,GAAA,EAAAjN,CAAAD,EAAA,iCACnBgC,EAAA5B,EAAA6B,cAACkL,EAAA,EAADlN,OAAAmN,OAAA,GACMH,EADN,CAEEI,OAAQ,SAAAvL,GAAK,OACa,IAAxBoD,EAASC,WACPnD,EAAA5B,EAAA6B,cAACU,EAAcb,GAEfE,EAAA5B,EAAA6B,cAACkL,EAAA,EAAD,CAAU5K,GAAG,iBCUf+K,GAAW3I,aAAa2I,SAE9B,GAAIA,GAAU,CACZlJ,EAAYkJ,IACZ,IAAMC,GAAmBR,IAAWO,IACpCnC,GAAMzG,SAAS,CACb1D,KzBjB4B,mByBkB5BC,QAASsM,KAGX,IAAMC,GAAcC,KAAKC,MAAQ,IAC7BH,GAAiBI,IAAMH,KACzBrC,GAAMzG,SAASD,KACfzB,OAAO8B,SAASC,KAAO,SA8CZ6I,oLAzCX,OACE5L,EAAA5B,EAAA6B,cAAC4L,EAAA,EAAD,CAAU1C,MAAOA,IACfnJ,EAAA5B,EAAA6B,cAACK,EAAA,EAAD,KACEN,EAAA5B,EAAA6B,cAAA,WACED,EAAA5B,EAAA6B,cAAC6L,EAAD,MAEA9L,EAAA5B,EAAA6B,cAACkL,EAAA,EAAD,CAAOY,OAAK,EAACC,KAAK,IAAIhB,UAAWd,KACjClK,EAAA5B,EAAA6B,cAACkL,EAAA,EAAD,CAAOY,OAAK,EAACC,KAAK,YAAYhB,UAAWb,KACzCnK,EAAA5B,EAAA6B,cAACkL,EAAA,EAAD,CAAOY,OAAK,EAACC,KAAK,SAAShB,UAAWP,KAEtCzK,EAAA5B,EAAA6B,cAACkL,EAAA,EAAD,KACEnL,EAAA5B,EAAA6B,cAACgM,GAAD,CAAaF,OAAK,EAACC,KAAK,aAAahB,UAAW1J,IAChDtB,EAAA5B,EAAA6B,cAACgM,GAAD,CAAaF,OAAK,EAACC,KAAK,cAAchB,UAAWtH,IACjD1D,EAAA5B,EAAA6B,cAACgM,GAAD,CACEF,OAAK,EACLC,KAAK,qBACLhB,UAAWhG,IAEbhF,EAAA5B,EAAA6B,cAACgM,GAAD,CACEF,OAAK,EACLC,KAAK,oBACLhB,UAAWvD,IAEbzH,EAAA5B,EAAA6B,cAACgM,GAAD,CACEF,OAAK,EACLC,KAAK,sBACLhB,UAAW/C,IAEbjI,EAAA5B,EAAA6B,cAACgM,GAAD,CACEF,OAAK,EACLC,KAAK,wCACLhB,UAAWrB,gBAjCThJ,aC1BEuL,QACW,cAA7BlL,OAAO8B,SAASqJ,UAEe,UAA7BnL,OAAO8B,SAASqJ,UAEhBnL,OAAO8B,SAASqJ,SAAShH,MACvB,2DCZNiH,IAASf,OAAOrL,EAAA5B,EAAA6B,cAACoM,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBnD,WACrBA,UAAUoD,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e6e658be.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\nimport { async } from \"q\";\n\nexport const createProject = (project, history) => async disptach => {\n  try {\n    const res = await axios.post(\"/api/project\", project);\n\n    history.push(\"/dashboard\");\n    disptach({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    disptach({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async disptach => {\n  const res = await axios.get(\"/api/project/all\");\n  disptach({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async disptach => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    disptach({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async disptach => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the project and all the data relate to it\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n\n    disptach({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for Backlog\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\n//Types for Security\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\nclass ProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { deleteProject }\n)(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n  render() {\n    const { projects } = this.props.project;\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n              <br />\n              <hr />\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  project: state.project\n});\nexport default connect(\n  mapStateToProps,\n  { getProjects }\n)(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { SET_CURRENT_USER, GET_ERRORS } from \"./types\";\nimport jwt_decode from \"jwt-decode\";\nimport { async } from \"q\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    console.log(newUser);\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const login = LoginReqeust => async dispatch => {\n  try {\n    const res = await axios.post(\"/api/users/login\", LoginReqeust);\n    const { token } = res.data;\n\n    localStorage.setItem(\"JwtToken\", token);\n\n    setJWTToken(token);\n\n    const decoded = jwt_decode(token);\n\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"JwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { logout } from \"../../actions/securityAction\";\n\nclass Header extends Component {\n\n\n logout(){\n    \n  this.props.logout();\n    window.location.href =\"/\";\n  }\n  render() {\n\nconst {validToken,user} = this.props.security;\n\nconst isUserAuthenticated= (\n  <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/dashboard\">\n          Dashboard\n        </Link>\n      </li>\n    </ul>\n\n    <ul className=\"navbar-nav ml-auto\">\n      <li className=\"nav-item\">\n        <Link className=\"nav-link \" to=\"/dashboard\">\n          <i className=\"fas fa-user-circle mr-1\"/>{user.fullName}\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/logout\" onClick={this.logout.bind(this)}>\n          Logout\n        </Link>\n      </li>\n    </ul>\n  </div>\n)\n  \n  const isUserNotAuthenticated=(\n  <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n    \n\n    <ul className=\"navbar-nav ml-auto\">\n      <li className=\"nav-item\">\n        <Link className=\"nav-link \" to=\"/register\">\n          Sign Up\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/login\">\n          Login\n        </Link>\n      </li>\n    </ul>\n  </div>\n);\n\n\nlet headerLinks;\n\nif(validToken && user){\n  headerLinks = isUserAuthenticated;\n}\nelse{\n  headerLinks = isUserNotAuthenticated;\n}\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n          \n        </div>\n      </nav>\n    );\n  }\n}\n\n\nHeader.propTypes={\n  security: PropTypes.object.isRequired,\n  logout: PropTypes.func.isRequired\n}\nconst mapStateToProps=state=>({\n  security: state.security\n})\nexport default connect(mapStateToProps,{logout})(Header);\n","import React, { Component } from \"react\";\nimport propTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n      console.log(newProject)\n    this.props.createProject(newProject, this.props.history);\n  };\n  render() {\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Create Project form </h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg \"\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: propTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { createProject }\n)(AddProject);\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport { PropTypes } from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n  }\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  onSubmit = e => {\n    e.preventDefault();\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  };\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectIdentifier\n                    })}\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.start_date\n                    })}\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.end_date\n                    })}\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProject, createProject }\n)(UpdateProject);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { deleteProjectTask } from \"../../../actions/backlogAction\";\nclass ProjectTask extends Component {\n  onDelete = (backlog_id, PT_id) => {\n    this.props.deleteProjectTask(backlog_id, PT_id);\n  };\n  render() {\n    const { ProjectTask } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    console.log(\"project_task sequence\");\n    console.log(ProjectTask.projectSequence);\n    if (ProjectTask.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n    if (ProjectTask.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n    if (ProjectTask.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {ProjectTask.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{ProjectTask.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {ProjectTask.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${ProjectTask.projectIdentifier}/${ProjectTask.projectSequence}`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={()=>this.onDelete(\n              ProjectTask.projectIdentifier,\n              ProjectTask.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\nimport { async } from \"q\";\n\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    console.log(\"backlogAction\");\n    console.log(project_task);\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  /*const res = await axios.get(`/api/backlog/${backlog_id}`);\n  dispatch({\n    type: GET_BACKLOG,\n    payload: res.data\n  });*/\n\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (window.confirm(`You are deleting project task${pt_id}`)) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks } = this.props;\n    const tasks = project_tasks.map(project_task => (\n      <ProjectTask key={project_task.id} ProjectTask={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    console.log(\"tasks\");\n    console.log(tasks);\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.ProjectTask.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.ProjectTask.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n      if (tasks[i].props.ProjectTask.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n      //todoItems.push(tasks[i]);\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogAction\";\n\nclass ProjectBoard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  render() {\n    const { errors } = this.state;\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    let BoardContent;\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks={project_tasks} />;\n      }\n    };\n    BoardContent = boardAlgorithm(errors, project_tasks);\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  getBacklog: PropTypes.func.isRequired,\n  backlog: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBacklog }\n)(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addProjectTask } from \"../../../actions/backlogAction\";\nimport classnames from \"classnames\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newProjectTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newProjectTask,\n      this.props.history\n    );\n  };\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    name=\"acceptanceCriteria\"\n                    placeholder=\"Acceptance Criteria\"\n                    ref={this.input}\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { addProjectTask }\n)(AddProjectTask);\n","import { GET_ERRORS, GET_PROJECTS } from \"../actions/types\";\nimport { functionTypeAnnotation } from \"@babel/types\";\n\nconst intialState = {};\n\nexport default function(state = intialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst intialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = intialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_BACKLOG, GET_PROJECT_TASK,DELETE_PROJECT_TASK } from \"../actions/types\";\n\nconst intitalState={\n    project_tasks:[],\n    project_task:{}\n};\n\nexport default function(state=intitalState,action){\n\nswitch(action.type)\n{\n    case GET_BACKLOG:\n    return{\n        ...state,\n        project_tasks : action.payload\n\n    }\n    case GET_PROJECT_TASK:\n    return{\n        ...state,\n        project_task : action.payload\n\n    }\n\n    case DELETE_PROJECT_TASK:\n    return{\n        ...state,\n            project_tasks: state.project_tasks.filter(project_task =>project_task.projectSequence!==action.payload)\n\n    }\n\n    default: return state\n}\n}","import{SET_CURRENT_USER} from \"../actions/types\";\n\nconst intialState = {\n        user:{},\n        validToken:false\n  };\n\n\n  const booleanActionPayload =(payload)=>{\n            if(payload){\n                return true;\n            }\n            else{\n                return false;\n            }\n\n  }\n  export default function(state=intialState,action){\n\n    switch(action.type){\n        case SET_CURRENT_USER:\n        return{\n            ...state,\n            validToken:booleanActionPayload(action.payload),\n            user:action.payload\n        }\n\n        default:return state;\n    }\n  }","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst intialState = {};\n\nconst middleWare = [thunk];\n\nlet store;\n\nconst ReactReduxTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\n\nif (window.navigator.userAgent.includes(\"Chrome\")&&ReactReduxTools) {\n  store = createStore(\n    rootReducer,\n    intialState,\n    compose(\n      applyMiddleware(...middleWare),\n      ReactReduxTools\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    intialState,\n    compose(applyMiddleware(...middleWare))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../actions/backlogAction\";\nimport PropTypes from \"prop-types\";\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {}\n    };\n  }\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    console.log(\"UpdateProjectTask\");\n    //const backlog_id = this.props.match.params.backlog_id;\n    //const pt_id = this.props.match.params.pt_id;\n    console.log(this.props.match.params.backlog_id);\n    console.log(this.props.match.params.pt_id);\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(\"componentWillReceiveProps\");\n    console.log(nextProps);\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    });\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const newProjectTask = {\n      id: this.state.id,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      projectSequence: this.state.projectSequence,\n      create_At: this.state.create_At\n    };\n    console.log(newProjectTask);\n\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      newProjectTask,\n      this.props.history\n    );\n  };\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">\n                Add /Update Project Task\n              </h4>\n              <p className=\"lead text-center\">\n                Project Name:{this.state.projectIdentifier} + Project Task ID:\n                {\"\"}+ {this.state.projectSequence}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Landing extends Component {\n\n\n  componentDidMount(){\n    if(this.props.security.validToken){\n      this.props.history.push(\"/dashboard\")\n    }\n  }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Management Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start you own\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nLanding.propTypes={\n  security: PropTypes.object.isRequired\n}\nconst mapStateTopProp=state=>({\n  security:state.security\n})\nexport default connect(mapStateTopProp,null)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityAction\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount(){\n    if(this.props.security.validToken){\n      this.props.history.push(\"/dashboard\")\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      username: this.state.username,\n      password: this.state.password,\n      fullName: this.state.fullName,\n      confirmPassword: this.state.confirmPassword\n    };\n    console.log(newUser);\n    this.props.createNewUser(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security:state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityAction\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount(){\n    if(this.props.security.validToken){\n      this.props.history.push(\"/dashboard\")\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    this.props.login(LoginRequest);\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">errors.username</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">errors.password</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  errors: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport AddProject from \"./components/Project/AddProject\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityAction\";\nimport SecureRoute from \"./securityUtils/SecureRoute.js\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div>\n            <Header />\n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            <Switch>\n              <SecureRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecureRoute exact path=\"/addProject\" component={AddProject} />\n              <SecureRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecureRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecureRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecureRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n/*\n<div className=\"App\">\n        <Dashboard />\n    </div>\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}